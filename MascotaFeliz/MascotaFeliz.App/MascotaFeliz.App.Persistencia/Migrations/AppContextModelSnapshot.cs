// <auto-generated />
using System;
using MascotaFeliz.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MascotaFeliz.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MascotaFeliz.App.Dominio.Mascota", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DueñoNroIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Raza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("DueñoNroIdentificacion");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.Usuario", b =>
                {
                    b.Property<int>("NroIdentificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumeroContacto")
                        .HasColumnType("bigint");

                    b.Property<string>("TipoIdentificacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NroIdentificacion");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Usuario");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.VisitaDomiciliaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("EncargadoNroIdentificacion")
                        .HasColumnType("int");

                    b.Property<string>("EstadoAnimo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaHoraVisita")
                        .HasColumnType("datetime2");

                    b.Property<int>("FrencuenciaCardiaca")
                        .HasColumnType("int");

                    b.Property<int>("FrencuenciaRespiratoria")
                        .HasColumnType("int");

                    b.Property<string>("Medicinas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pacienteid")
                        .HasColumnType("int");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Remision")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperatura")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EncargadoNroIdentificacion");

                    b.HasIndex("Pacienteid");

                    b.ToTable("VisitasDomiciliarias");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.Dueño", b =>
                {
                    b.HasBaseType("MascotaFeliz.App.Dominio.Usuario");

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Dueño");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.Veterinario", b =>
                {
                    b.HasBaseType("MascotaFeliz.App.Dominio.Usuario");

                    b.Property<int>("CodigoProfesional")
                        .HasColumnType("int");

                    b.Property<string>("TarjetaProfesional")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Veterinario");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.Mascota", b =>
                {
                    b.HasOne("MascotaFeliz.App.Dominio.Dueño", "Dueño")
                        .WithMany()
                        .HasForeignKey("DueñoNroIdentificacion");

                    b.Navigation("Dueño");
                });

            modelBuilder.Entity("MascotaFeliz.App.Dominio.VisitaDomiciliaria", b =>
                {
                    b.HasOne("MascotaFeliz.App.Dominio.Veterinario", "Encargado")
                        .WithMany()
                        .HasForeignKey("EncargadoNroIdentificacion");

                    b.HasOne("MascotaFeliz.App.Dominio.Mascota", "Paciente")
                        .WithMany()
                        .HasForeignKey("Pacienteid");

                    b.Navigation("Encargado");

                    b.Navigation("Paciente");
                });
#pragma warning restore 612, 618
        }
    }
}
